(()=>{"use strict";document.getElementById("title"),document.getElementById("category"),document.getElementById("add");const e=[];class t{constructor(e,t){this.title=e,this.category=t,this.tasks=[]}addTask(e){this.tasks.push(e)}deleteTask(e){const t=this.tasks.indexOf(e);-1!==t&&this.tasks.splice(t,1)}deleteProject(e){-1!==this.projects.indexOf(e)&&this.projects.splice(e,1)}pushProject(e){this.projects.push(e)}}function c(){document.querySelector(".project-form").classList.toggle("show-project-form")}function s(){const e=document.querySelectorAll(".project-list li"),t=document.querySelector(".project-title");e.forEach((c=>{c.addEventListener("click",(s=>{e.forEach((e=>{e.classList.remove("selected")})),c.classList.add("selected");const o=s.target.textContent;t.textContent="",t.textContent=o}))}))}function o(e){const t=document.createElement("i");return e.forEach((e=>t.classList.add(e))),t}const n=class{constructor(e,t,c,s,o,n){this.title=e,this.description=t,this.dueDate=c,this.priority=s,this.notes=o,this.checklist=n}deleteTask(e,t){-1!==e.indexOf(t)&&e.splice(t,1)}pushTask(e,t){e.push(t)}};window.addEventListener("resize",(function(){const e=document.querySelector(".main");window.innerWidth<=1e3?e.classList.remove("contract-main"):e.classList.add("contract-main")})),window.Task=n,function(){const e=document.querySelector(".toggle-menu"),t=document.querySelector(".side-bar");e.addEventListener("click",(()=>{e.classList.toggle("active"),t.classList.toggle("show-side-bar")}))}(),document.querySelector(".projects-icon").addEventListener("click",(()=>{c()})),function(){const n=document.querySelector("#add"),l=document.querySelector("#title");n.addEventListener("click",(n=>{n.preventDefault();const i=document.querySelector("#title").value,r=new t(i,"Gym");e.push(r),l.value="",c(),function(e){const t=document.querySelector(".project-title");t.textContent="",t.textContent=e;const c=document.querySelector(".project-list");document.querySelectorAll(".project-list li").forEach((e=>{e.classList.remove("selected")}));const s=document.createElement("li");s.textContent=e,s.classList.add("selected");const n=document.createElement("div");n.classList.add("icons");const l=o(["fa-solid","fa-pen-to-square"]),i=o(["fa-solid","fa-trash-can"]);n.appendChild(l),n.appendChild(i),s.appendChild(n),c.appendChild(s)}(i),s(),console.log(e)}))}(),s(),document.querySelector("#cancel").addEventListener("click",(e=>{e.preventDefault(),c()})),console.log("hello world");const l=new n("hello world","first task","21/09/23","High");console.log(l),console.log("test")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,